import os
import ctypes
import sys
import time
import random
from docx import Document
import subprocess
import keyboard
import threading
import signal
from questions import questions, run_quiz

exit_flag = False


# Check script Administrator
def is_admin():
    try:
        return ctypes.windll.shell32.IsUserAnAdmin()
    except:
        return False

# Run script with Administrator
def run_as_admin():
    script = sys.executable
    params = " ".join([f'"{arg}"' for arg in sys.argv])
    ctypes.windll.shell32.ShellExecuteW(None, "runas", script, params, None, 1)

# Animation run
def type_print(text, delay=0.03):
    global exit_flag
    for char in text:
        if exit_flag:
            detect_alt_enter()
        if char == '\n':
            sys.stdout.write('\n')
            sys.stdout.flush()
            time.sleep(delay)
        elif char == '\t':
            sys.stdout.write('\t')
            sys.stdout.flush()
            time.sleep(delay)
        else:
            sys.stdout.write(char)
            sys.stdout.flush()
            time.sleep(delay)
    print()

# Exit Exam
def block_ctrl_c(sig, frame):
    type_print("\nKh√¥ng ƒë∆∞·ª£c d√πng Ctrl + C. H√†nh vi b·ªã ghi nh·∫≠n. Nh·∫•n ph√≠m '1' ƒë·ªÉ tho√°t.")
    signal.signal(signal.SIGINT, block_ctrl_c)
    try:
        while True:
            time.sleep(0.1)
            if keyboard.is_pressed('1'):
                print("T·∫°m bi·ªát!")
                os._exit(0) 
    except Exception as e:
        print(f"L·ªói x·∫£y ra: {e}")
    

def wait_to_exit():
    print("Nh·∫•n ph√≠m '1' ƒë·ªÉ tho√°t ch∆∞∆°ng tr√¨nh.")
    try:
        while True:
            time.sleep(0.1)
            if keyboard.is_pressed('1'):
                print("T·∫°m bi·ªát!")
                os._exit(0) 
    except Exception as e:
        print(f"L·ªói x·∫£y ra: {e}")

# Check action Alt + Enter
def detect_alt_enter():
    global exit_flag
    while True:
        if keyboard.is_pressed('alt') and keyboard.is_pressed('enter'):
            print("\nWARNING!")
            print("- B·∫°n ƒë√£ c·ªë t√¨nh nh·∫•n Alt + Enter vi ph·∫°m ƒêI·ªÄU 2.")
            print("- B√†i ki·ªÉm tra s·∫Ω k·∫øt th√∫c sau v√†i gi√¢y, li√™n h·ªá v·ªõi ADMIN h·ªï tr·ª£. C·∫£m ∆°n!!!")
            exit_flag = True
            time.sleep(10)
            hwnd = ctypes.windll.kernel32.GetConsoleWindow()
            ctypes.windll.user32.PostMessageW(hwnd, 0x0010, 0, 0) 
            sys.exit(0)
        time.sleep(0.1)


# Main
if __name__ == "__main__":
    if sys.platform != "win32":
        print("Ch·ª©c nƒÉng n√†y ch·ªâ h·ªó tr·ª£ tr√™n Windows.")
        sys.exit(1)

    if not is_admin():
        print("üîí Ch∆∞∆°ng tr√¨nh c·∫ßn ch·∫°y v·ªõi quy·ªÅn Admin. ƒêang th·ª≠ kh·ªüi ch·∫°y l·∫°i...")
        run_as_admin()
        sys.exit(0)
    try:
        keyboard.send('alt + enter')
    except Exception as e:
        print(f"(Kh√¥ng th·ªÉ g·ª≠i ph√≠m: {e})")
    # Monitoring Alt + Enter
    threading.Thread(target=detect_alt_enter, daemon=True).start()

    print("\nXIN CH√ÄO C√ÅC B·∫†N - THD CYBER SECURITY")
    # type_print("\t-T√¥i l√† Frederick Nguy·ªÖn (admin). Tool n√†y t√¥i l√†m ra ƒë·ªÉ h·ªó tr·ª£ t√¥i ƒë√°nh gi√° c√°c b·∫°n, kh√¥ng ph√¥ di·ªÖn kƒ© nƒÉng g√¨ ·ªü ƒë√¢y, Tool s·∫Ω c√≥ BUG n·∫øu t√¨m ra c√°c b·∫°n l√† thi√™n t√†i :v")
    # type_print("\t-Li√™n h·ªá h·ªó tr·ª£: frederick.nguyen@thdcybersecurity.com\n")
    # print("ƒêI·ªÄU KHO·∫¢N:")
    # type_print("\t1/ N·∫øu s·ª≠ d·ª•ng Ctrl + C th√¨ ch∆∞∆°ng tr√¨nh s·∫Ω t·ª± ƒë·ªông k·∫øt th√∫c b√†i ki·ªÉm tra...")
    # type_print("\t2/ N·∫øu b·∫°n c·ªë t√¨nh s·ª≠ d·ª•ng c√°c t·ªï h·ª£p ph√≠m kh√°c ƒë·ªÉ tho√°t ra ngo√†i b√†i ki·ªÉm tra. Ch∆∞∆°ng tr√¨nh s·∫Ω k·∫øt th√∫c ngay l·∫≠p t·ª©c!...")
    print("CH√ö √ù:")
    type_print("\t- Ch·ªâ ƒë∆∞·ª£c ch·ªçn ƒë√°p √°n A | B | C | D | E")
    type_print("\t- Khi ch·ªçn ƒë√°p √°n xong, c√¢u tr·∫£ l·ªùi s·∫Ω kh√≥a v√† t·ª± ƒë·ªông chuy·ªÉn sang c√¢u ti·∫øp theo...")
    type_print("\t- Khi h·∫øt th·ªùi gian, h·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông l∆∞u k·∫øt qu·∫£ v√† s·∫Ω t·ª± ƒë·ªông tho√°t ch∆∞∆°ng tr√¨nh...")
    print("\n=======================================START - GOOD LUCK========================================")
    time.sleep(5)
    

    # Run Question
    # random_question()
    run_quiz()
    print("\nüéâ ƒê√£ ho√†n th√†nh b√†i ki·ªÉm tra. C·∫£m ∆°n b·∫°n ƒë√£ tham gia!")

    # Run "1" Exit
    # block_ctrl_c()
    wait_to_exit()
